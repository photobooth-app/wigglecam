
[project]
name = "wigglecam-node"
description = "Node worker to build a wigglecam based on picamera2."
authors = [{ name = "Michael G", email = "me@mgineer85.de" }]
maintainers = [{ name = "Michael G", email = "me@mgineer85.de" }]
requires-python = ">=3.10,<3.14"
dynamic = ["version"]
readme = "README.md"
license = { text = "MIT" }
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Multimedia :: Graphics",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Multimedia :: Graphics :: Capture :: Digital Camera",
]
keywords = [
  "wigglecam",
  "wigglecamera",
  "stereoscopic",
  "picamera2",
  "picamera",
  "camera",
  "python",
  "synchronized camera",
]

dependencies = [
    "pydantic",
    "pydantic-settings",
    "gpiozero",
    "pillow>=10.0.0",
    "fastapi",
    "uvicorn",
]

[project.optional-dependencies]
wigglify = [
  "opencv-python>=4.8.1",
  "numpy>=2.0.0",
]

[project.urls]
homepage = "https://github.com/mgineer85/photobooth-wigglecam"
repository = "https://github.com/mgineer85/photobooth-wigglecam"
documentation = "https://github.com/mgineer85/photobooth-wigglecam"

[project.scripts]
# wigglecam_uvicorn = "uvicorn node.__main__:app --host=0.0.0.0 --port=8000 --log-level=debug"
# wigglecam_node = "node.__main__:main"
# wigglify = "wigglify.cli:main"

[tool.pdm]
version = { source = "file", path = "node/__version__.py" }

[tool.pdm.dev-dependencies]
test = [
  "pytest>=7.4.0",
]
lint = [
  "ruff"
]

[tool.pdm.scripts]
test = "pytest --basetemp=./tests_tmp/ -v ./tests"

[tool.ruff]
line-length = 150
extend-exclude = ["vendor"]

[tool.ruff.lint]
select = [
  "E",  # pycodestyle
  "W",  # pycodestyle
  "F",  # pyflakes
  "B",  # bugbear
  "UP", # pyupgrade
  "I",  # isort
  #"D",   # pydocstyle   # add later
]
ignore = [
  "B008", #used for DI injection
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
testpaths = "tests"
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.pdm.build]
includes = ["./node"]
